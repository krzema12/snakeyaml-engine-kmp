package it.krzeminski.copydsl.impl

import com.google.devtools.ksp.processing.CodeGenerator
import com.google.devtools.ksp.processing.Resolver
import com.google.devtools.ksp.processing.SymbolProcessor
import com.google.devtools.ksp.symbol.KSAnnotated
import com.squareup.kotlinpoet.FileSpec
import com.squareup.kotlinpoet.ksp.writeTo

class CopyDslSymbolProcessor(
    private val codeGenerator: CodeGenerator,
) : SymbolProcessor {
    private var wasRun = false

    override fun process(resolver: Resolver): List<KSAnnotated> {
        if (wasRun) {
            return emptyList()
        }
        wasRun = true
        println("Symbols annotated with @CopyDsl:")
        resolver.getSymbolsWithAnnotation("it.krzeminski.copydsl.api.CopyDsl").forEach {
            println(it)
        }
        val fileSpec = FileSpec
            .builder(packageName = "it.krzeminski.copydsl", fileName = "GeneratedDsl")
            .addFileComment("This file was generated by copy-dsl-ksp-processor. Do not edit manually.")
            .build()
        fileSpec.writeTo(codeGenerator = codeGenerator, aggregating = false)
        return emptyList()
    }
}
